
package arduino;

import com.panamahitek.PanamaHitek_Arduino; // instancia
import com.panamahitek.ArduinoException;
import java.io.OutputStream;
import java.util.Enumeration;
import java.util.logging.Level;
import java.util.logging.Logger;
import jssc.SerialPort;
import jssc.SerialPortException;

public class Mensajes extends javax.swing.JFrame {


    PanamaHitek_Arduino ino = new PanamaHitek_Arduino();
    // VARIABLE PARA CARACTERES
    public int caracteres;

    public Mensajes() {
        // AGREGAR COMPONENTES
        initComponents();
        // LETRAS
        letras();
        // CONECCION
        conexion();
    }

    public void conexion() { // coneccion 
        try {
            ino.arduinoTX("COM4", 9600);
        } catch (ArduinoException ex) {
            Logger.getLogger(Mensajes.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void enviardatos(String Dato) { // Enviar Datos
        try { // ENVIA LOS DATOS QUE SE GENEREN
            ino.sendData(Dato);
        } catch (ArduinoException ex) {
            Logger.getLogger(Mensajes.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SerialPortException ex) {
            Logger.getLogger(Mensajes.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    // CERRAR CONECCION
    public void cerrar() {
        try {
            ino.killArduinoConnection();
        } catch (ArduinoException ex) {
            Logger.getLogger(Mensajes.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    // METODO LETRAS 
    public void letras() {
        // CARACTERES SERA IGUAL A LOS 32 CARACTERES DISPONIBLES
        // POR EL LCD MENOS QUE EL USUARIO INGRESE
        caracteres = 32 - jTextFieldMensaje.getText().length();
        if (caracteres <= 0) {
            // SI LOS CARACTERES SON MENORES A 0 SE IMPRIME
            jLabelCaracteres.setText("Caracteres disponibles : 0 ");
            String cadena = "";
            cadena = cadena.substring(0, 32);
            // SE IMPRIME EN EL JTextField la cadena
            jTextFieldMensaje.setText(cadena);
        } else {
            //si son mayores a 0 se imprime
            jLabelCaracteres.setText("Caracteres disponibles: " + (caracteres));
        }

    }

    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jButtonLimpiar = new javax.swing.JButton();
        jButtonEnviar = new javax.swing.JButton();
        jTextFieldMensaje = new javax.swing.JTextField();
        jLabelCaracteres = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButtonLimpiar.setText("Limpiar Texto");
        jButtonLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLimpiarActionPerformed(evt);
            }
        });

        jButtonEnviar.setText("Enviar Texto");
        jButtonEnviar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEnviarActionPerformed(evt);
            }
        });

        jTextFieldMensaje.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldMensajeActionPerformed(evt);
            }
        });
        jTextFieldMensaje.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldMensajeKeyReleased(evt);
            }
        });

        jLabelCaracteres.setText("Caracteres Disponibles:");

        jButton1.setText("Regresar Menu");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setText("MENSAJES");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jTextFieldMensaje))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabelCaracteres, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(56, 56, 56)
                                .addComponent(jButtonEnviar)
                                .addGap(18, 18, 18)
                                .addComponent(jButtonLimpiar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton1)))
                        .addGap(0, 15, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(161, 161, 161)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jLabel1)
                .addGap(90, 90, 90)
                .addComponent(jTextFieldMensaje, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabelCaracteres, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonLimpiar)
                    .addComponent(jButtonEnviar)
                    .addComponent(jButton1))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>                        

    private void jTextFieldMensajeActionPerformed(java.awt.event.ActionEvent evt) {                                                  
        // se obtienen los datos del JTextField
        enviardatos(jTextFieldMensaje.getText());
        jTextFieldMensaje.setText("");
    }                                                 

    private void jTextFieldMensajeKeyReleased(java.awt.event.KeyEvent evt) {                                              
       
        letras();

    }                                             

    private void jButtonEnviarActionPerformed(java.awt.event.ActionEvent evt) {                                              
        // enviar  4 para Mensajes mas el mensaje que haya ingresado el usuario
        enviardatos("4"+jTextFieldMensaje.getText());
        jTextFieldMensaje.setText("");
        letras();
        


    }
